//1、用openGL编写一段代码实现图像锐化功能

//frag
uniform sample2D sampleTex;
in vec2 texture;
void main()
{
  vec4 texColor = texture(sampleTex,texture);
  
  vec3 finalColor;
  
  gl_fragColor = finalColor;
}



//2、给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。
//示例:
//输入: [-2,1,-3,4,-1,2,1,-5,4]
//输出: 6
//解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。



int GetMaxSum(const vector<int>& nums)
{
  int nRes = 0;
  if(nums.size() == 0)
  {
    return nRes;
  }
  
  int dp[][];
  vector<int> aAllSums;
  for(int i = 0;i < nums.size();i++)
  {
    dp[i][i] = nums[i];
  }
  
  for(int i = 0; i< nums.size();i++)
  {
    
  }
  
  for(int i =0; i< aAllSums.size();i++ )
  {
    if(aAllSums[i] >nRes )
    {
      nRes = aAllSums[i] ;
    }
  }
  
  return nRes;
}
